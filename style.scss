@use 'sass:color';


$primary-color: #3498db;
$secondary-color: #2ecc71;
$font-family: 'Arial', sans-serif;

// Миксин для кнопок
@mixin button-styles($bg-color) {
  background-color: $bg-color;
  color: white;
  padding: 10px 20px;
  border: none;
  cursor: pointer;
  font-size: 16px;
  border-radius: 5px;
  transition: background-color 0.3s ease;

  &:hover {
    background-color: color.adjust($bg-color, $lightness: -10%);

  }
}

// Основные стили
// body {
//   font-family: $font-family;
//   margin: 0;
//   padding: 0;
//   background-color: #f4f4f4;
// }

header {
  background-color: $primary-color;
  padding: 20px;
  text-align: center;
  
  nav ul {
    list-style: none;
    padding: 0;
    
    li {
      display: inline;
      margin: 0 15px;
    }
    
    a {
      color: white;
      text-decoration: none;
      font-weight: bold;
    }
  }
}

section {
  padding: 40px;
  margin: 20px auto;
  max-width: 900px;
  background-color: white;
  border-radius: 10px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);

  h1, h2 {
    color: $primary-color;
  }
  
  .project-card {
    background-color: #ecf0f1;
    padding: 30px;
    margin: 35px 0;
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    
    h3 {
      color: $secondary-color;
    }
  }
  
  #contact-form {
    display: flex;
    flex-direction: column;
    
    input, textarea {
      margin-bottom: 15px;
      padding: 10px;
      font-size: 16px;
      border: 1px solid #ddd;
      border-radius: 5px;
    }
    
    .button {
      @include button-styles($primary-color);
    }
  }
}

footer {
  text-align: center;
  padding: 20px;
  background-color: $primary-color;
  color: white;
}
  

:root {
    --grad-1: #042240;
    --grad-2: #000000;
    --gradient: radial-gradient(
      ellipse at center,
      var(--grad-1) 0%,
      var(--grad-2) 100%
    );
    --max-w: 40rem;  // увеличиваем ширину
    --max-h: 60rem;  // увеличиваем высоту
    --bg: url("./img/img3.jpg");
    --delay: 600ms;
}

body {
    background: var(--gradient);
    display: grid;
    height: 100dvh;
    margin: 0;
    width: 100dvw;
}

.collage-container {
    aspect-ratio: 1 / 1;
    height: var(--max-h);
    margin: auto;
    overflow: auto;
    position: relative;
    width: var(--max-w);
    z-index: -1;
    
    &::after {
        animation: bg-reveal 1.8s ease-in-out forwards;
        animation-delay: calc(8 * var(--delay));
        background: var(--bg) no-repeat -5dvh -5dvh / contain;
        content: "";
        height: 100%;
        inset: 0;
        opacity: 0;
        position: absolute;
        transform: scale(1.1);
        width: 100%;
        z-index: -1;
    }
}

.grid-overlay {
    display: grid;
    gap: 0.5rem;  // увеличиваем промежутки между карточками
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(3, 1fr);
    height: var(--max-h);
    width: var(--max-w);
}

.grid-item {
    opacity: 0;
    transform: scale(0.8) rotate(10deg);
    clip-path: inset(45% 20% 45% 20%);
    animation: reveal 800ms cubic-bezier(0.25, 0.8, 0.25, 1) forwards;
    border-radius: 0.25rem;
    overflow: hidden;
    position: relative;
    transform-origin: center;
    transition: transform 0.25s ease-in-out;
    
    &::after {
        background: var(--gradient);
        content: "";
        inset: 0;
        mix-blend-mode: hue;
        position: absolute;
        transition: opacity 0.15s ease-in-out;
    }

    &:hover {
        transform: scale(1.1) rotate(0deg);  // увеличиваем эффект на hover
    }
}

img {
    height: 100%;
    object-fit: cover;
    opacity: 0.9;
    width: 100%;
    transition: opacity 0.2s ease;
}

.grid-item:nth-child(n + 2):nth-child(-n + 4) {
    grid-row: 2;
}

.grid-item:nth-child(n + 5):nth-child(-n + 8) {
    grid-row: 3;
}

.item-1 {
    animation-delay: calc(7 * var(--delay));
    grid-column: 3 / span 2;
    grid-row: 1;
}

.item-2 {
    animation-delay: calc(6 * var(--delay));
    grid-column: 2 / span 1;
}

.item-3 {
    animation-delay: calc(5 * var(--delay));
    grid-column: 3 / span 1;
}

.item-4 {
    animation-delay: calc(4 * var(--delay));
    grid-column: 4 / span 1;
}

.item-5 {
    animation-delay: calc(3 * var(--delay));
    grid-column: 1 / span 1;
}

.item-6 {
    animation-delay: calc(2 * var(--delay));
    grid-column: 2 / span 1;
}

.item-7 {
    animation-delay: var(--delay);
    grid-column: 3 / span 1;
}

.item-8 {
    animation-delay: 0s;
    grid-column: 4 / span 1;
}

@keyframes reveal {
    from {
        opacity: 0;
        transform: scale(0.8) rotate(10deg);
        clip-path: inset(45% 20% 45% 20%);
    }

    to {
        opacity: 1;
        transform: scale(1) rotate(0deg);
        clip-path: inset(0% 0% 0% 0%);
    }
}

@keyframes bg-reveal {
    0% {
        opacity: 0;
        transform: scale(1.1);
    }

    100% {
        opacity: 1;
        transform: scale(1);
    }
}
